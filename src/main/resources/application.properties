server.port=80
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#MySQL 
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/springboot_db1012?useSSL=false&serverTimezon=Asia/Seoul&&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=123456
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#mariaDB 해당 디비 주소 , 계정 비번은 변경에서 주기. 
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mariadb://
#spring.datasource.username=
#spring.datasource.password=

#AWS 설정 해당  계정 비번은 변경에서 주기. 
#cloud.aws.credentials.accessKey=
#cloud.aws.credentials.secretKey=
#cloud.aws.credentials.instanceProfile=true
#cloud.aws.stack.auto=false

# AWS S3 Service bucket
# 해당 버킷 하위에 test폴더 만들어봄.  원하는 폴더에 지정해서 저장 가능.
cloud.aws.s3.bucket=jpa-board-bucket/test
#cloud.aws.s3.bucket=jpa-board-bucket
cloud.aws.region.static=ap-northeast-2
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
# AWS S3 Bucket URL
#cloud.aws.s3.bucket.url=


#LAZY loading erreor
spring.jackson.serialization.fail-on-empty-beans=false

spring.jpa.properties.hibernate.show_sql=true

#spring.jpa.properties.hibernate.format_sql=true

#logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.hibernate.ddl-auto=create
spring.profiles.include=oauth
#spring.h2.console.enabled=true
#spring.session.store-type=jdbc


#fileupload path
#spring.servlet.multipart.location=/usr/local/tomcat9.0/webapps/upload
#spring.servlet.multipart.location=C:/Temp/upload_board_lsy0707
#spring.servlet.multipart.max-file-size=20MB
#spring.servlet.multipart.max-request-size=20MB